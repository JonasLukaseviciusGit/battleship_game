import tkinter as tk
from tkinter.font import Font
import numpy as np

SIZE = 700
DIMENSION = 20

TOTAL_SIZE = 1000

class Assembly:
    def __init__(self):
        self.current_ship_type = 0
        self.current_ship_engines = 0
        self.current_ship_status = None
        if self.current_ship_type + self.current_ship_engines >= 2:
            self.current_ship_status = self.current_ship_engines / self.current_ship_type

        self.button_values_shiptype = [0, 0, 0, 0, 0]
        self.button_coords_shiptype = []

        self.button_values_ships = [[0], [0, 0], [0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0, 0]]
        self.button_coords_ships = []

        self.ships = [[], [], [], [], []]
        self.matrix = np.zeros((DIMENSION, DIMENSION), dtype=int)
        self.coords_all = []
        self.coords_inner = []
        self.coords_outer = []
        self.window = None
        self.canvas = None

    def create_button(self, x, y, text, fill='ivory', outline='ivory4', fontname='Arial', fontsize=12, default_length=None):
        # Calculate the width and height of the rectangle based on the text size
        font_obj = Font(font=(fontname, fontsize))

        if default_length is None:
            text_width = font_obj.measure(text)
        else:
            text_width = default_length

        text_height = font_obj.metrics("linespace")

        margins = text_height * 0.25

        # Calculate the coordinates of the top-left corner for text coordinates
        top_left_x = (x - text_width / 2)
        top_left_y = (y - text_height / 2)

        text_coords = (top_left_x + text_width / 2, top_left_y + text_height / 2)

        # Calculate the coordinates of the four corners of the rectangle
        top_left_x = (x - text_width / 2) - margins
        top_left_y = (y - text_height / 2) - margins
        bottom_right_x = (x + text_width / 2) + margins
        bottom_right_y = (y + text_height / 2) + margins

        # Create the rectangle using the calculated coordinates
        self.canvas.create_rectangle(top_left_x, top_left_y, bottom_right_x, bottom_right_y, fill=fill, outline=outline)
        # Create the text inside the rectangle
        self.canvas.create_text(text_coords, text=text, font=(fontname, fontsize), fill="black", justify="center")

        return {'coordinates': [top_left_x, top_left_y, bottom_right_x, bottom_right_y],
                'text': text, 'fill': fill, 'outline': outline, 'font name': fontname, 'font size': fontsize}

    def main_board(self):
        tile_size = SIZE / (DIMENSION + 1)

        for row in range(DIMENSION):
            for col in range(DIMENSION):
                x1 = col * tile_size + tile_size
                y1 = row * tile_size + tile_size
                x2 = x1 + tile_size
                y2 = y1 + tile_size

                self.canvas.create_rectangle(x1, y1, x2, y2, fill='white')

                self.canvas.create_line(x1, y1, x1, y2, fill="black")
                self.canvas.create_line(x1, y1, x2, y1, fill="black")

        for row in range(DIMENSION):
            x = tile_size * 0.5
            y = row * tile_size + tile_size * 1.5
            self.canvas.create_text(x, y, text=str(row + 1), anchor="center")

        for col in range(DIMENSION):
            x = col * tile_size + tile_size * 1.5
            y = tile_size * 0.5
            self.canvas.create_text(x, y, text=chr(col + 65), anchor="center")

    def info_board(self):
        tile_size = SIZE / (DIMENSION + 1)
        self.canvas.create_line(SIZE, 0, SIZE, SIZE, fill="black", width=2)
        self.canvas.create_line(TOTAL_SIZE, 0, TOTAL_SIZE, SIZE, fill="black", width=2)
        self.canvas.create_line(SIZE, tile_size / 10, TOTAL_SIZE, tile_size / 10, fill="black", width=2)
        self.canvas.create_line(SIZE, SIZE, TOTAL_SIZE, SIZE, fill="black", width=2)

        self.canvas.create_text(((SIZE + TOTAL_SIZE) / 2), (tile_size / 2), text="YOUR SHIPS", font=("Arial", 12),
                           justify="center")

        laivai = ['penkiamotoriai', 'keturmotoriai', 'trimotoriai', 'dvimotoriai', 'vienmotoriai']
        vieta_tekstui = 125

        x = SIZE + (vieta_tekstui / 2) + 3
        y = tile_size * 1.5
        for laivas in laivai:
            button = self.create_button(x=x, y=y, text=laivas, default_length=110)
            y += tile_size

        self.canvas.create_line(SIZE + tile_size / 5 + vieta_tekstui, tile_size * 1.2,
                                SIZE + tile_size / 5 + vieta_tekstui, tile_size / 10 +
                                tile_size * 6, fill="black", width=1)

    def create_board(self):
        self.window = tk.Tk()
        self.window.title("Tiled Board")

        self.canvas = tk.Canvas(self.window, width=TOTAL_SIZE, height=SIZE)
        self.canvas.pack()

        self.main_board()
        self.info_board()

        self.window.mainloop()


game = Assembly()
game.create_board()
