import numpy as np
from random import randint
import tkinter as tk
import time

DIMENSION = 10

matrix = np.zeros((DIMENSION, DIMENSION), dtype=int)

laivai = [
    [],         # vienmotoriai
    [],         # dvimotoriai
    [],         # trimotoriai
    [],         # keturmotoriai
    []          # penkiamotoriai
]

def check_validity(coordinate, coords_current, coords_all):
    x, y = coordinate
    close = [[x-1, y], [x+1, y], [x, y-1], [x, y+1]]
    cross = [[x+1, y+1], [x+1, y-1], [x-1, y+1], [x-1, y-1]]
    validity = False

    for coord in close:
        if coord in coords_all:
            return validity

    for coord in cross:
        if coord in coords_all:
            return validity

    if matrix[x][y] == 1:
        return validity

    if len(coords_current) == 0:
        validity = True
        return validity
    else:
        for coord in coords_current:
            if coord in close:
                validity = True
                return validity
    return validity


def get_valid_coordinates(coords_current, coords_all):
    coordinate = None
    validity = False
    valid = []
    for x in range(1, DIMENSION-1):
        for y in range(1, DIMENSION-1):
            coord = [x, y]
            validity = check_validity(coord, coords_current, coords_all)
            if validity is True:
                valid.append(coord)
    return valid


def make_coord(coords_current):
    valid_coordinates = get_valid_coordinates(coords_current, coords_all)
    print('coords current:    ' + str(coords_current))
    print('coords all:        ' + str(coords_all))
    print('valid coordinates: ' + str(valid_coordinates))
    index = randint(0, len(valid_coordinates)-1)
    return valid_coordinates[index]


def build_ship(ship_type):
    coords_current = []
    for i in range(ship_type):
        coord = make_coord(coords_current)
        coords_current.append(coord)
        x, y = coord
        matrix[x][y] = 1
        print('----------------')
        #print('selected coordinate: ' + str(coord))
        #print('ship so far:         ' + str(coords_current))
        print(matrix)
        #time.sleep(0.5)
    for coord in coords_current:
        coords_all.append(coord)

coords_all = []

ship_type = 1
for ship_type in range(1, 6):
    num_ships = 6 - ship_type
    for ship in range(num_ships):
        build_ship(ship_type)
        print('ship ' + str(ship+1) + '/' + str(num_ships) + ' of type ' + str(ship_type) + ' is built')

print('-----DONE-----')
