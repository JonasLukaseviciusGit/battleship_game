import numpy as np
import random
import tkinter as tk
from board_generator import make_board


class Agent:
    def __init__(self):
        self.window = None
        self.canvas = None

        self.coordinates_not_tried = []
        self.current_ship_coordinates = []
        self.current_ship_type = None

        self.dimension = 20
        self.size = 700
        self.tile_size = None

        self.real_board = None
        self.visible_board = None

        self.score = 0

        self.colors = ['firebrick1', 'Turquoise2', 'aquamarine4', 'OliveDrab2', 'purple1']

    def create_real_board(self):
        self.real_board = make_board()

    def create_visible_board(self):
        self.visible_board = np.zeros((self.dimension, self.dimension), dtype=int)
        self.coordinates_not_tried = [[row, col] for row in range(self.dimension) for col in range(self.dimension)]
        print(self.coordinates_not_tried)           # ---------------------

    def create_tkinter_board(self):
        self.window = tk.Tk()
        self.canvas = tk.Canvas(self.window, width=self.size, height=self.size)
        self.canvas.pack()
        self.tile_size = self.size / (self.dimension + 1)

        for row in range(self.dimension):
            for col in range(self.dimension):
                x1 = col * self.tile_size + self.tile_size
                y1 = row * self.tile_size + self.tile_size
                x2 = x1 + self.tile_size
                y2 = y1 + self.tile_size

                self.canvas.create_rectangle(x1, y1, x2, y2, fill='white')

                self.canvas.create_line(x1, y1, x1, y2, fill="black")
                self.canvas.create_line(x1, y1, x2, y1, fill="black")

        for row in range(self.dimension):
            x = self.tile_size * 0.5
            y = row * self.tile_size + self.tile_size * 1.5
            self.canvas.create_text(x, y, text=str(row), anchor="center")

        for col in range(self.dimension):
            x = col * self.tile_size + self.tile_size * 1.5
            y = self.tile_size * 0.5
            self.canvas.create_text(x, y, text=str(col), anchor="center")

        # langeliu zymejimas
        for row in range(self.dimension):
            for col in range(self.dimension):
                colors = ['firebrick1', 'Turquoise2', 'aquamarine4', 'OliveDrab2', 'purple1']
                value = self.real_board[row][col]
                if self.real_board[row][col] != 0:
                    x1 = col * self.tile_size + self.tile_size
                    y1 = row * self.tile_size + self.tile_size
                    x2 = x1 + self.tile_size
                    y2 = y1 + self.tile_size
                    self.canvas.create_rectangle(x1, y1, x2, y2, fill=colors[value - 1])

    def mark_board(self, row, col):
        x1 = col * self.tile_size + self.tile_size
        y1 = row * self.tile_size + self.tile_size
        x2 = x1 + self.tile_size
        y2 = y1 + self.tile_size
        self.canvas.create_text((x1+x2)/2, (y1+y2)/2, text='X', anchor='center', font=15)

    def make_a_guess(self):
        def action(coordinate):
            x, y = coordinate
            if self.real_board[x][y] == 0:
                self.visible_board[x][y] = -1
            else:
                self.visible_board[x][y] = self.real_board[x][y]
                self.current_ship_coordinates.append(coordinate)
                self.score += 1
            self.coordinates_not_tried.remove(coordinate)
            self.mark_board(x, y)

        if len(self.current_ship_coordinates) == 0:
            coordinate = random.choice(self.coordinates_not_tried)
            action(coordinate)
        else:
            x, y = self.current_ship_coordinates[0]
            value = self.real_board[x][y]
            if len(self.current_ship_coordinates) == 1 and value == 1:
                self.current_ship_coordinates = []
                coordinate = random.choice(self.coordinates_not_tried)
                action(coordinate)
            elif len(self.current_ship_coordinates) == value:
                print('visi motorai pasauti')
                self.current_ship_coordinates = []
                coordinate = random.choice(self.coordinates_not_tried)
                action(coordinate)
            else:
                potential = []
                for coordinate in self.current_ship_coordinates:
                    x, y = coordinate
                    close = [[x + 1, y], [x - 1, y], [x, y + 1], [x, y - 1]]
                    for close_one in close:
                        if close_one not in self.current_ship_coordinates:
                            if close_one in self.coordinates_not_tried:
                                potential.append(close_one)
                print('potential: ' + str(potential))
                coordinate = random.choice(potential)
                action(coordinate)
        if self.score < 35:
            self.window.after(100, self.make_a_guess)

    def run(self):
        self.create_real_board()
        self.create_visible_board()
        self.create_tkinter_board()
        self.make_a_guess()
        self.window.mainloop()


agent = Agent()
agent.run()
